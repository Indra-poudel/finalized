[{"/home/indra/Upwork/improvement/src/serviceWorker.js":"1","/home/indra/Upwork/improvement/src/ImageList.js":"2","/home/indra/Upwork/improvement/src/CustomAlert.js":"3","/home/indra/Upwork/improvement/src/index.js":"4","/home/indra/Upwork/improvement/src/Slider.js":"5","/home/indra/Upwork/improvement/src/Screen3.js":"6","/home/indra/Upwork/improvement/src/App.js":"7"},{"size":5086,"mtime":1603190080000,"results":"8","hashOfConfig":"9"},{"size":7278,"mtime":1608019136000,"results":"10","hashOfConfig":"9"},{"size":795,"mtime":1607932922000,"results":"11","hashOfConfig":"9"},{"size":296,"mtime":1607853316000,"results":"12","hashOfConfig":"9"},{"size":323,"mtime":1607898100000,"results":"13","hashOfConfig":"9"},{"size":18587,"mtime":1610463359813,"results":"14","hashOfConfig":"9"},{"size":643,"mtime":1608019070000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1k54ecx",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/indra/Upwork/improvement/src/serviceWorker.js",[],"/home/indra/Upwork/improvement/src/ImageList.js",["32"],"import React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { Link } from \"react-router-dom\";\nimport Aos from \"aos\";\nimport \"aos/dist/aos.css\";\nimport { Button } from \"@material-ui/core\";\n\nclass ImageList extends Component {\n  state = {\n    rowsPerPage: 5,\n    page: 0,\n    index: 0,\n    images: [],\n    selectedImages: [],\n    isOpen: false,\n    dialogueImage: \"\",\n    dialogueIndex: \"\",\n    dataToBeTransfered: {\n      link1:\n        \"https://cdn.pixabay.com/photo/2015/12/01/20/28/road-1072823__340.jpg\",\n      link2:\n        \"https://media.istockphoto.com/photos/happy-family-mother-father-children-son-and-daughter-runing-and-on-picture-id1206622213?b=1&k=6&m=1206622213&s=170667a&w=0&h=nerRK3CI11u4uGCVVH1NlZIZid7S-TWla2inQ8MOKvg=\",\n      link3:\n        \"https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__340.jpg\",\n      link4:\n        \"https://cdn.pixabay.com/photo/2016/11/14/04/45/elephant-1822636__340.jpg\",\n      link5:\n        \"https://cdn.pixabay.com/photo/2018/02/08/22/27/flower-3140492__340.jpg\",\n    },\n  };\n\n  // Sending data to localStorage.\n\n  onSetterClick = () => {\n    localStorage.setItem(\n      `imageslist`,\n      JSON.stringify(this.state.dataToBeTransfered)\n    );\n  };\n\n  componentDidMount = () => {\n    Aos.init({});\n    setTimeout(() => {\n      fetch(\n        `https://pixabay.com/api/?key=19122540-fd49208c969016643570e0c98&q=yellow`\n      ) // fetch to API by passing in query state\n        .then((response) => response.json()) // covert to JSON fromat\n        .then(({ hits }) => hits.map(({ webformatURL }) => webformatURL)) // use object destructuring to grab image urls from json response\n        .then((images) => {\n          this.setState({\n            images: images,\n            selectedImages: images.slice(0, 5),\n          });\n        }); // call setImages to update images state with image urls\n    }, 0);\n  };\n\n  slideLeft = () => {\n    const nextIndex = this.state.index - 1;\n    if (nextIndex < 0) {\n      this.setState({\n        index: this.state.images.length - 1,\n      });\n    } else {\n      this.setState({\n        index: nextIndex,\n      });\n    }\n  };\n\n  removeImage = () => {\n    let newImages = this.state.images;\n    newImages.splice(this.state.index, 1);\n\n    this.setState({\n      images: newImages,\n    });\n  };\n\n  handleChangePage = (event, newPage) => {\n    let selectedImages = this.state.images.slice(newPage * 5, newPage * 5 + 5);\n    this.setState({\n      page: newPage,\n      selectedImages: selectedImages,\n    });\n  };\n\n  handleShowDialog = (image, index) => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n      dialogueImage: image,\n      dialogueIndex: index,\n    });\n  };\n  handleClose = () => {\n    this.setState({\n      isOpen: false,\n    });\n  };\n  render() {\n    const { selectedImages } = this.state;\n    return (\n      this.state.images.length > 0 && (\n        <div\n          data-aos=\"fade-up\"\n          data-aos-duration=\"800\"\n          data-aos-delay=\"600\"\n          data-aos-easing=\"ease-out\"\n          style={{ margin: 50 }}\n        >\n          <div style={styles.contentWrapper}>\n            <TextField\n              id=\"date\"\n              label=\"Start Date\"\n              type=\"date\"\n              margin=\"dense\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              style={{\n                marginRight: 20,\n              }}\n            />\n            <TextField\n              id=\"date\"\n              label=\"End Date\"\n              type=\"date\"\n              margin=\"dense\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </div>\n          <div style={styles.imagesContianer}>\n            {selectedImages.map((image, index) => (\n              <div\n                className=\"image__container\"\n                key={index}\n                style={{\n                  marginTop: 10,\n                  width: \"100%\",\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  justifyContent: \"flex-start\",\n                  alignItems: \"space-between\",\n                  border: \"solid\",\n                  borderColor: \"rgb(216, 216, 216)\",\n                  borderWidth: 1,\n                }}\n              >\n                <div\n                  style={{\n                    marginTop: 10,\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                    width: \"100%\",\n                  }}\n                >\n                  <img\n                    className=\"screen2__image\"\n                    onClick={(event) => this.handleShowDialog(image, index)}\n                    style={styles.mainImage}\n                    src={image}\n                    alt={index}\n                  />\n                  <Link\n                    to=\"/screen3\"\n                    onClick={() => {\n                      this.onSetterClick(this.state.dataToBeTransfered);\n                    }}\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      justifyContent: \"end\",\n                      width: \"100%\",\n                      alignItems: \"space-between\",\n                    }}\n                  >\n                    <div className=\"texts__section\">\n                      <p class=\"text text1\">Text 1</p>\n                      <br />\n                      <br />\n                      <p class=\"text text2\">Text 2</p>\n                      <br />\n                      <br />\n                    </div>\n                  </Link>\n                </div>\n              </div>\n            ))}\n\n            <Modal\n              open={this.state.isOpen}\n              onClose={this.handleClose}\n              aria-labelledby=\"simple-modal-title\"\n              aria-describedby=\"simple-modal-description\"\n            >\n              <img\n                style={{\n                  width: 500,\n                  marginTop: \"10%\",\n                  marginLeft: \"30%\",\n                }}\n                src={this.state.dialogueImage}\n                alt={this.state.dialogueIndex}\n              />\n            </Modal>\n          </div>\n          <TablePagination\n            rowsPerPageOptions={[5]}\n            component=\"div\"\n            count={this.state.images.length}\n            rowsPerPage={this.state.rowsPerPage}\n            page={this.state.page}\n            onChangePage={this.handleChangePage}\n          />\n        </div>\n      )\n    );\n  }\n}\n\nconst styles = {\n  contentWrapper: {\n    margin: 10,\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"start\",\n    alignItems: \"space-between\",\n  },\n\n  imagesContianer: {\n    padding: 10,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    justifyItems: \"end\",\n    height: \"50%\",\n  },\n\n  mainImage: {\n    border: \"solid\",\n    borderColor: \" rgb(216, 216, 216)\",\n    borderWidth: 1,\n    width: 260,\n    marginLeft: 10,\n    marginRight: 10,\n    zIndex: \"100\",\n  },\n};\n\nexport default ImageList;\n",["33","34"],"/home/indra/Upwork/improvement/src/CustomAlert.js",[],"/home/indra/Upwork/improvement/src/index.js",[],"/home/indra/Upwork/improvement/src/Slider.js",[],"/home/indra/Upwork/improvement/src/Screen3.js",["35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51"],"/home/indra/Upwork/improvement/src/App.js",["52","53"],{"ruleId":"54","severity":1,"message":"55","line":8,"column":10,"nodeType":"56","messageId":"57","endLine":8,"endColumn":16},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"54","severity":1,"message":"62","line":2,"column":8,"nodeType":"56","messageId":"57","endLine":2,"endColumn":14},{"ruleId":"54","severity":1,"message":"63","line":11,"column":8,"nodeType":"56","messageId":"57","endLine":11,"endColumn":27},{"ruleId":"54","severity":1,"message":"64","line":12,"column":8,"nodeType":"56","messageId":"57","endLine":12,"endColumn":24},{"ruleId":"54","severity":1,"message":"65","line":15,"column":10,"nodeType":"56","messageId":"57","endLine":15,"endColumn":14},{"ruleId":"54","severity":1,"message":"66","line":20,"column":10,"nodeType":"56","messageId":"57","endLine":20,"endColumn":20},{"ruleId":"54","severity":1,"message":"67","line":21,"column":10,"nodeType":"56","messageId":"57","endLine":21,"endColumn":26},{"ruleId":"54","severity":1,"message":"68","line":28,"column":10,"nodeType":"56","messageId":"57","endLine":28,"endColumn":23},{"ruleId":"54","severity":1,"message":"69","line":33,"column":10,"nodeType":"56","messageId":"57","endLine":33,"endColumn":21},{"ruleId":"54","severity":1,"message":"70","line":38,"column":10,"nodeType":"56","messageId":"57","endLine":38,"endColumn":21},{"ruleId":"54","severity":1,"message":"71","line":39,"column":10,"nodeType":"56","messageId":"57","endLine":39,"endColumn":20},{"ruleId":"54","severity":1,"message":"72","line":39,"column":22,"nodeType":"56","messageId":"57","endLine":39,"endColumn":35},{"ruleId":"73","severity":1,"message":"74","line":152,"column":13,"nodeType":"75","endLine":152,"endColumn":73},{"ruleId":"76","severity":1,"message":"77","line":191,"column":13,"nodeType":"75","endLine":195,"endColumn":15},{"ruleId":"76","severity":1,"message":"77","line":234,"column":13,"nodeType":"75","endLine":238,"endColumn":15},{"ruleId":"76","severity":1,"message":"77","line":262,"column":13,"nodeType":"75","endLine":266,"endColumn":15},{"ruleId":"76","severity":1,"message":"77","line":514,"column":13,"nodeType":"75","endLine":519,"endColumn":15},{"ruleId":"78","severity":1,"message":"79","line":516,"column":15,"nodeType":"80","endLine":516,"endColumn":41},{"ruleId":"54","severity":1,"message":"81","line":1,"column":17,"nodeType":"56","messageId":"57","endLine":1,"endColumn":25},{"ruleId":"54","severity":1,"message":"82","line":1,"column":27,"nodeType":"56","messageId":"57","endLine":1,"endColumn":36},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","no-native-reassign",["83"],"no-negated-in-lhs",["84"],"'Slider' is defined but never used.","'ArrowForwardIosIcon' is defined but never used.","'ArrowBackIosIcon' is defined but never used.","'Link' is defined but never used.","'imageValue' is assigned a value but never used.","'markAvailibility' is assigned a value but never used.","'slideIndexOne' is assigned a value but never used.","'slideIndex2' is assigned a value but never used.","'slideIndex3' is assigned a value but never used.","'slideIndex' is assigned a value but never used.","'setSlideIndex' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]